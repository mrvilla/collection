'use strict';
exports.__esModule = true;
/**
 * Check if element is in viewport
 *
 * @param {Object} elem - Object, which we want to check
 * @param {Boolean} [useBounds] - if true, whole element must be visible
 * @param {Number} [topOffsetDelta] - offset to be added to element top offset
 * @param {Number} [leftOffsetDelta] - offset to be added to element left offset
 *
 * @return {Boolean}
 */
function isInViewport(elem, useBounds, topOffsetDelta, leftOffsetDelta) {
    if (useBounds === void 0) { useBounds = false; }
    if (topOffsetDelta === void 0) { topOffsetDelta = 0; }
    if (leftOffsetDelta === void 0) { leftOffsetDelta = 0; }
    var el = elem;
    var top = el.offsetTop;
    var left = el.offsetLeft;
    var width = el.offsetWidth;
    var height = el.offsetHeight;
    var cond = false;
    while (el.offsetParent) {
        el = el.offsetParent;
        top += el.offsetTop;
        left += el.offsetLeft;
    }
    top += topOffsetDelta;
    left += leftOffsetDelta;
    if (useBounds) {
        cond = top >= window.pageYOffset && left >= window.pageXOffset && (top + height) <= (window.pageYOffset + window.innerHeight) && (left + width) <= (window.pageXOffset + window.innerWidth);
    }
    else {
        cond = top < (window.pageYOffset + window.innerHeight) && left < (window.pageXOffset + window.innerWidth) && (top + height) > window.pageYOffset && (left + width) > window.pageXOffset;
    }
    return cond;
}
exports["default"] = isInViewport;
;
