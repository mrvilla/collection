import './utils/polyfills/custom-event';
import { VeamsHelpersType } from './plugins/helpers';
import { EVENTSType } from './utils/events';
/**
 * Interfaces
 */
export interface VeamsOptions {
    namespace?: string;
    addToGlobal?: boolean;
}
/**
 * Represents VeamsCore.
 * @module VeamsCore
 *
 * @author Sebastian Fitzner
 */
declare class Core {
    _initialized: boolean;
    /**
     * Current Veams Version
     */
    _version: any;
    /**
     * Detection object
     */
    detections: {
        width?: number;
        height?: number;
    };
    /**
     * Registered Veamshelpers
     */
    helpers: VeamsHelpersType;
    /**
     * Available Events
     */
    EVENTS: EVENTSType;
    /**
     * Plugins Object
     */
    Plugins: {};
    use: any;
    /**
     * Base information about veams
     */
    base: {
        name: string;
        version: string;
    };
    /**
     * Veams options
     */
    _options: VeamsOptions;
    /**
     * Constructor
     */
    constructor(opts: VeamsOptions);
    /**
     * Getter & Setter
     */
    version: any;
    initialized: boolean;
    options: VeamsOptions;
    /**
     * Setup Veams core
     * @param opts
     */
    setup(opts: VeamsOptions): void;
    /**
     * Initialize veams core
     * @param opts Options
     */
    initialize(opts?: VeamsOptions): void;
    /**
     * On initialize lifecyle hook
     *
     * @param cb
     */
    onInitialize(cb: () => any): any;
    /**
     * After initialize lifecycle hook
     *
     * @param cb
     */
    afterInitialize(cb: () => any): void;
    /**
     * On DOM ready lifecycle hook
     *
     * @param cb
     */
    onDOMReady(cb: () => any): void;
}
export default Core;
